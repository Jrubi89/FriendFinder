import Serialize from 'form-serialize'
import Alert from 'appril-alert'
import {scroll_top} from 'appril-utils'

import Editor from './editor'

export default {
  props: ['task'],
  template: require('./template'),

  computed: {
    email() {return this.$store.state.EmailTasks.email}
  },

  components: {
    Editor
  },

  methods: {
    set_email(evt) {
      let email_id = evt.target.options[evt.target.selectedIndex].value
      this.api.fetch_email(email_id).send({
        success: (email) => {
          this.$store.commit('EMAIL_TASKS__SET_EMAIL', null)
          this.$nextTick(() => this.$store.commit('EMAIL_TASKS__SET_EMAIL', email))
        }
      })
    },

    schedule(evt) {
      let data = Serialize(evt.target.closest('form'), {hash: true})

      this.api.is_duplicate_task(this.task.id, data.email_id).send({
        success: (duplicate_task) => {

          let schedule = () => {

            evt.target.disabled = true

            this.api.schedule(this.task.id, data).send({
              success: () => {
                this.$store.commit('CRUDLE__UPDATE_ITEM', {
                  name: data.name,
                  running: true,
                  started_at: new Date
                })
                scroll_top()
              },

              done() {
                evt.target.disabled = false
              }
            })
          }

          if (duplicate_task) {
            let warn = `Less than 24 hours ago
              this same email was already scheduled to be sent to these same users.
              See task #${duplicate_task.id} for details.
            `
            Alert.confirm('Important!', {text: warn, confirmButtonText: 'Send Anyway'}, schedule)
          } else
            schedule()
        }
      })
    }
  }
}
