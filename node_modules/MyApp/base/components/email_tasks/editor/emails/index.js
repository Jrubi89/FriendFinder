import Serialize from 'form-serialize'
import Alert from 'appril-alert'

import Filters from './filters'
import Status from './status'

export default {
  props: ['task'],
  template: require('./template'),

  computed: {
    loading() {return this.$store.state.EmailTasks.loading},
  },

  components: {
    Filters,
    Status
  },

  mounted() {
    let el = this.$el.querySelector('#emails')
    el.onscroll = () => {
      if (el.scrollHeight - el.scrollTop !== el.clientHeight)
        return
      this.load_more()
    }
  },

  methods: {
    load_more() {
      let offset = this.$store.state.item.emails.list.length
      let filters = this.$store.state.EmailTasks.filters
      this.$store.commit('EMAIL_TASKS__LOADING', true)
      this.api.emails(this.url.params.id, filters, offset).send({
        success: (emails) => {
          this.$store.commit('EMAIL_TASKS__PUSH_EMAILS', emails)
        },
        done: () => {
          this.$store.commit('EMAIL_TASKS__LOADING', false)
        }
      })
    },

    delete_email(email, index) {
      Alert.confirm(() => {
        this.api.delete_email(this.task.id, email).send({
          success: () => {
            this.$store.commit('EMAIL_TASKS__DELETE_EMAIL', index)
          }
        })
      })
    }
  }
}
