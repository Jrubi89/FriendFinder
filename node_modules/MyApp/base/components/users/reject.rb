class Users

  def reject user_id, subject, body

    if @user.status == User::REJECTED
      halt(400, "User is already #{User::REJECTED}")
    end

    email_uuid = "#{@user.account_type}_status_changed_to_#{User::REJECTED}"
    email = Email[email_uuid]
    email || halt(400, '"%s" email not found' % email_uuid)

    subject, body = Email.render(
      subject,
      body,
      render_context: {user: @user.serialized},
      layout: email.layout && email.layout.content
    )

    MailSpool.create({
      user_id: @user.id,
      email_id: email.id,
      email: @user.email,
      subject: subject,
      body: body,
      cc: email.cc,
      bcc: email.bcc
    })

    @user.update_column(:status, User::REJECTED)

    {status: User::REJECTED}
  end
end
