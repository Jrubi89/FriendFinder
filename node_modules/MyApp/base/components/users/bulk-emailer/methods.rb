class Users

  def email_matched
    create_and_go_to_email_task(filtered_dataset(params))
  end

  def email_selected
    create_and_go_to_email_task(model.where(id: params[:selected]))
  end

  private
  def create_and_go_to_email_task users
    batch_size = 1000
    columns = [:email_task_id, :user_id, :first_name, :last_name, :email, :draft]
    task = EmailTask.create(filters: params)

    users.select(:id, :first_name, :last_name, :email).find_in_batches(batch_size: batch_size) do |users|
      MailSpool.import(columns, users.map! {|user| [
        task.id,
        user.id,
        user.first_name,
        user.last_name.to_s,
        user.email,
        true
      ]}, validate: false)
    end

    redirect(EmailTasks.url(id: task.id))
  end
end
