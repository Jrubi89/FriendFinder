class Users < BaseController
  include Crudle::Controller
  include User::Filters

  IS_FORMAT = 'is_%s'.freeze

  before do
    if path_params[:user_id]
      @user = User.find_by(id: path_params[:user_id])
      @user || halt(404, 'User not found')
    end
  end

  def configs params
    {
      approved_status: User::APPROVED,
      rejected_status: User::REJECTED,
    }
  end

  def impersonate user_id
    unless @user.authorization_token
      @user.update_column(:authorization_token, Helpers.generate_random_token)
    end
    cookies[:user] = {value: @user.authorization_token, path: '/'}
    redirect(@user.url)
  end

  def create
    user = model.new
    user.save(validate: false)
    user.id
  end

  def fetch_email uuid
    Email[uuid] || halt(400, '"%s" email not found' % escape_html(uuid))
  end

  private
  def order; {id: :desc, first_name: :asc} end

  def serializer user
    user.serializable_hash
  end

  def editor_serializer user
    serializer(user).update({
      emails: MailSpool.where(user_id: user.id).order(id: :desc).select(:subject, :created_at, :sent),
      authlogs: user.authlogs.order(id: :desc).limit(100)
    })
  end
end
