import {map, find, filter} from 'lodash'
import {product_photo, product_default_sku} from 'components/orders/helpers'


export function colors() {
  return filter(this.$options.product_colors, (color) => find(this.product.skus, (s) => s.color === color))
}

export function color() {
  return (this.$store.state.Orders.color_map || {})[this.product.id] || this.default_sku.color
}

export function sizes() {
  return filter(this.$options.product_sizes, (size) => find(this.product.skus, (s) => s.size === size))
}

export function size() {
  return (this.$store.state.Orders.size_map || {})[this.product.id] || this.default_sku.size
}

export function sku() {

  // product has no colors and no sizes, return default SKU
  if (this.colors.length === 0 && this.sizes.length === 0)
    return this.default_sku

  // product has colors but no sizes, return a SKU matching current color or default one
  if (this.colors.length > 0 && this.sizes.length === 0)
    return this.color ?
      find(this.product.skus, (s) => s.color === this.color) :
      this.default_sku

  // product has sizes but no colors, return a SKU matching current size or default one
  if (this.colors.length === 0 && this.sizes.length > 0)
    return this.size ?
      find(this.product.skus, (s) => s.size === this.size) :
      this.default_sku

  // product has both sizes and colors, return a SKU matching both or default one
  if (this.colors.length > 0 && this.sizes.length > 0)
    return this.color && this.size ?
      find(this.product.skus, (s) => s.color === this.color && s.size === this.size) :
      this.default_sku

  return {
    price: 0,
    out_of_stock: true
  }
}

export function photo() {
  return product_photo.call(this, this.product, this.color)
}

export function contained_products() {
  return map(this.product.contains || [], ({product_id}) => {
    return find(this.$options.products, (p) => p.id === product_id)
  }).compact()
}

export function default_sku() {
  return product_default_sku(this.product)
}

export {cart} from '../cart/computed'
