import {find} from 'lodash'
import Vue from 'vue/dist/vue.js'
import Alert from 'appril-alert'
import Autocomplete from 'appril-autocomplete'

import Suggestion from './suggestion'
const suggestion = Vue.extend(Suggestion)

import User from './user'

export default {
  template: require('./template'),

  computed: {
    user() {return this.$store.state.Orders.user}
  },

  components: {
    User
  },

  mounted() {
    if (this.url.params.user_id) {
      this.api.user(this.url.params.user_id).send({
        success: (user) => this.$store.commit('ORDERS__SET_USER', user)
      })
    }

    let users = []
    let input = this.$el.querySelector('input#user')

    new Autocomplete({
      selector: input,
      cache: false,

      source: (q, cb) => {
        this.$store.commit('ORDERS__SET_USER', null)
        this.api.users(q).send({
          success(_users) { cb(users = _users) }
        })
      },

      renderItem: (user) => {
        let vm = new suggestion({data: {user}})
        vm.$mount(document.createElement('div'))
        let html = vm.$el.innerHTML
        vm.$el.remove()
        vm.$destroy()
        return html
      },

      onSelect: (__, ___, el) => {
        let user_id = parseInt(el.getAttribute('data-id'))

        let user = find(users, (u) => u.id === user_id)

        if (!user)
          return Alert.error('Error selecting user')

        this.$store.commit('ORDERS__SET_USER', user)
        this.url.update(this.url.params, {user_id: user.id})
        input.value = ''
      }
    })

    input.focus()
  }
}
