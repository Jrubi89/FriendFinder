class Orders
  include SearchHelpers

  private
  def first_name_filter params, dataset
    return if params[:first_name].nil? || params[:first_name].empty?
    dataset.where('shipping_first_name ILIKE ?', '%s%' % params[:first_name])
  end

  def last_name_filter params, dataset
    return if params[:last_name].nil? || params[:last_name].empty?
    dataset.where('shipping_last_name ILIKE ?', '%s%' % params[:last_name])
  end

  def email_filter params, dataset
    return if params[:email].nil? || params[:email].empty?
    dataset.where('shipping_email ILIKE ?', "%#{params[:email]}%")
  end

  def status_filter params, dataset
    return if params[:status].nil? || params[:status].empty?

    if params[:status] == 'pickup'
      return dataset.ok.where(shipping_service: 'pickup')
    end

    if params[:status] == 'shipped'
      return dataset.shipped
    end

    if params[:status] == 'awaiting_shipment'
      return dataset.awaiting_shipment
    end

    dataset.where(status: params[:status])
  end

  def date_a_filter params, dataset
    return if params[:date_a].nil? || params[:date_a].empty?
    dataset.where('created_at >= ?', Time.new(*params[:date_a].split('-').map(&:to_i), 0, 0, 0, Cfg.utc_offset).utc)
  end

  def date_z_filter params, dataset
    return if params[:date_z].nil? || params[:date_z].empty?
    dataset.where('created_at <= ?', Time.new(*params[:date_z].split('-').map(&:to_i), 23, 59, 59, Cfg.utc_offset).utc)
  end

  def money_used_filter params, dataset
    return if params[:money_used].nil? || params[:money_used].empty?
    dataset.where('money_used > 0')
  end
end
