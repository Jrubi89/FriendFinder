import {merge, cloneDeep} from 'lodash'

const default_state = {
  shipment_controls: false,
  current_category: null,
  current_product: null,
  color_map: {},
  size_map: {},
  cart: [],
  user: null,
  edit_address: false
}

export default {

  state: cloneDeep(default_state),

  mutations: {

    ORDERS__RESET(state, index) {
      state.Orders = cloneDeep(default_state)
    },

    ORDERS__UPDATE(state, order) {
      merge(state.item, order)
    },

    ORDERS__TOGGLE_SHIPMENT_CONTROLS({Orders}, status) {
      Orders.shipment_controls = status
    },

    ORDERS__UPDATE_TRACKING_NUMBER(state, {tracking_number, carrier}) {
      merge(state.item, {tracking_number, carrier, shipped_at: new Date})
    },

    ORDERS__SET_CATEGORY({Orders}, category) {
      Orders.current_category = category
    },

    ORDERS__SET_PRODUCT({Orders}, product) {
      Orders.current_product = product
    },

    ORDERS__SET_COLOR({Orders}, {product, color}) {
      Orders.color_map = {...Orders.color_map}
      Orders.color_map[product.id] = color
    },

    ORDERS__SET_SIZE({Orders}, {product, size}) {
      Orders.size_map = {...Orders.size_map}
      Orders.size_map[product.id] = size
    },

    ORDERS__CART__ADD({Orders}, row) {
      Orders.cart.push(row)
    },

    ORDERS__CART__PLUS({Orders}, index) {
      Orders.cart[index].qty++
    },

    ORDERS__CART__MINUS({Orders}, index) {
      Orders.cart[index].qty--
    },

    ORDERS__CART__REMOVE({Orders}, index) {
      Orders.cart.splice(index, 1)
    },

    ORDERS__SET_USER({Orders}, user) {
      Orders.user = user
    },

    ORDERS__UPDATE_USER({Orders}, updates) {
      merge(Orders.user, updates)
    },

    ORDERS__EDIT_ADDRESS({Orders}, status) {
      Orders.edit_address = status
    },

  }
}
