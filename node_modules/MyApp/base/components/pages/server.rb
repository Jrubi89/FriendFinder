class Pages < BaseController
  include Crudle::Controller

  def configs params
    {
      layouts:  Layout.select(:id, :name),
      snippets: Snippet.select(:name),
      pages_url: Cfg.server_url,
    }
  end

  def create_alias id, params
    page = model.find_by(id: id)
    page || halt(400, 'No page found by given ID')

    if page.aliases.find_by(baseurl: params[:baseurl])
      halt(400, 'Alias already exists')
    end

    [
      page.aliases.create({
        baseurl: params[:baseurl],
        redirect_code: params[:redirect_code]
      })
    ]
  end

  def delete_alias id, alias_id
    page = model.find_by(id: id)
    page || halt(400, 'No page found by given ID')

    _alias = page.aliases.find_by(id: alias_id)
    _alias ||  halt(400, 'No alias found by given ID')
    _alias.destroy
    true
  end

  private
  def model; Page end

  def order; 'name, id DESC' end

  # def name_filter params, dataset
  #   return if params[:name].nil? || params[:name].empty?
  #   dataset.where('name LIKE ?', params[:name] + '%')
  # end

  def list_serializer page
    {id: page.id, name: page.name, baseurl: page.baseurl, published: page.published}
  end

  def editor_serializer page
    page.serializable_hash.update(aliases: page.aliases)
  end

  # def serializer item
  #   item
  # end

end
