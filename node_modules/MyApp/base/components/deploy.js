import {has, merge, isFunction, forEach,  find} from 'lodash'
import * as utils from 'appril-utils'
import url from 'appril-url'

window.jQuery = jQuery // needed from magnific-popup

import 'assets/styles.css'
import 'appril-polyfills'

merge(utils, require('helpers/application_helpers'))

import 'selectize'
import 'selectize/dist/css/selectize.css'

import 'parsleyjs'
import 'parsleyjs/src/parsley.css'

require('base_helpers/magnific-popup')

import 'bootstrap/dist/js/umd/tab.js'
import 'bootstrap/dist/js/umd/dropdown.js'
import 'bootstrap/dist/js/umd/collapse.js'

Object.freeze(utils)

const layouts = {
  main: require('templates/layouts/main'),
  none: require('templates/layouts/none'),
}

import AccessDenied from 'templates/access_denied'

import Crudle from 'crudle'

export default function(components, component, constructor) {

  Crudle.Menu = {
    template: require('templates/menu'),
    data() {
      return {
        ...components,
        is_active(...a) {return find(a, (c) => c.url == component.url) ? true : false}
      }
    }
  }

  let content, layout

  if (has(constructor, 'layout')) {
    layout = isFunction(constructor.layout) ? constructor.layout(env) : constructor.layout

    if (layout == false) {
      layout = 'none'
    } else {
      if (!has(layouts, layout))
        throw `${component.path}: unknown layout ${layout}`
    }
  } else
    layout = 'main'

  if (isFunction(constructor.acl)) {
    if (!constructor.acl(env))
      constructor = AccessDenied
  }

  return Crudle(constructor)
}
