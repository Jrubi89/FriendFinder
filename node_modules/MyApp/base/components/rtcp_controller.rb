class RTCPController < Appril::RTCPController
  map BaseController.url('__rtcp__')
  import :error_handlers, from: BaseController

  private
  # called after socket connection established
  def connected
    Subscribe :admin do |*,data|
      socket.send_data(data) if socket && !socket.closed?
    end
  end

  # data sent to client after connection established
  def initialization_data
    {
      # client_url is highly important setup, do NOT remove
      client_url: File.join([Admin::Cfg.dev_server_url, Admin::Cfg.client_url, environment].compact),

      user_photos_url: URL.to_user_photos,
      product_photos_url: URL.to_product_photos,

      countries: Cache.countries,

      cfg: [
        :store
      ].each_with_object({}) {|c,o| o[c] = Cfg[c]},
    }
  end

  # merged into original env when calling a controller
  def rtcp_env
    {}
  end

  # called when socket connection closed
  def disconnected
  end
end
